# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|                                          
  
  # box 
  config.vm.box = "/dev/vagrant/c72/package.box"    
  
  #synced folders
  config.vm.synced_folder '.', '/opt/dev', type: 'nfs'


  #defaul VM settings
  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", 12120] 
    vb.customize ["modifyvm", :id, "--cpus", 2] 
  end
  
    # asciidoctor
   config.vm.define :docker do |docker|
     docker.vm.hostname = "docker.barenode.org"
     docker.vm.network :private_network, ip: "192.168.72.101"
   end 
  
$script = <<SCRIPT

#!/bin/bash

#docker
curl -fsSL https://get.docker.com/ | sh
sudo systemctl start docker
systemctl enable docker.service

#sudo systemctl status docker
##docker build -t kubia /opt/dev/images/kubia
##docker run --name kubia-container -p 8080:8080 -d kubia
#yum -y install virtualbox
#curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.23.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
#minikube start
#export KUBERNETES_PROVIDER=vagrant; wget -q -O - https://get.k8s.io | bash

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kube*
EOF

# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

systemctl enable kubelet && systemctl start kubelet

#preflight
systemctl stop firewalld
swapoff -a
echo 'net.bridge.bridge-nf-call-iptables = 1' >> /etc/sysctl.conf
sudo sysctl -p

#init
kubeadm init

#user
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl taint nodes --all node-role.kubernetes.io/master-
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

SCRIPT
  config.vm.provision :shell do |shell|
    shell.inline = $script
  end
  
      
end
                        